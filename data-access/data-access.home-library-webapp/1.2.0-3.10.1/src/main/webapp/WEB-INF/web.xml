<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
	license agreements. See the NOTICE file distributed with this work for additional 
	information regarding copyright ownership. The ASF licenses this file to 
	You under the Apache License, Version 2.0 (the "License"); you may not use 
	this file except in compliance with the License. You may obtain a copy of 
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->

<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>
	<display-name>Jackrabbit JCR Server</display-name>

	<listener>
		<!-- Releases all Derby resources when the webapp is undeployed. -->
		<!-- See https://issues.apache.org/jira/browse/JCR-1301 -->
		<listener-class>
			org.apache.jackrabbit.j2ee.DerbyShutdown
		</listener-class>
	</listener>

	<!-- ====================================================================== -->
	<!-- R E P O S I T O R Y S T A R T U P S E R V L E T -->
	<!-- ====================================================================== -->
	<servlet>
		<servlet-name>RepositoryStartup</servlet-name>
		<description>
			Repository servlet that starts the repository and
			registers it to JNDI ans RMI.
			If you already have the repository
			registered in this appservers JNDI
			context,
			or if its accessible via
			RMI, you do not need to use this servlet.
		</description>
		<servlet-class>org.apache.jackrabbit.j2ee.RepositoryStartupServlet</servlet-class>

		<init-param>
			<param-name>bootstrap-config</param-name>
			<param-value>jackrabbit/bootstrap.properties</param-value>
			<description>
				Property file that hold the same initialization
				properties than
				the init-params below. If a parameter is specified in
				both
				places the one in the bootstrap-config wins.
			</description>
		</init-param>

		<!-- <init-param> <param-name>repository-config</param-name> <param-value>/WEB-INF/repository/repository.xml</param-value> 
			<description>the repository config location</description> </init-param> <init-param> 
			<param-name>repository-home</param-name> <param-value>jackrabbit/repository</param-value> 
			<description>the repository home</description> </init-param> <init-param> 
			<param-name>repository-name</param-name> <param-value>jackrabbit.repository</param-value> 
			<description>Repository Name under which the repository is registered via 
			JNDI/RMI</description> </init-param> -->

		<!-- the following 3 parameters deal with registering the repository to 
			a RMI registry. if all parameters are omitted, the repository will not be 
			registered. -->
		<!-- <init-param> <param-name>rmi-port</param-name> <param-value>0</param-value> 
			<description> The RMI port for registering the repository in the RMI Registry. 
			If equals 0, the default port is used. </description> </init-param> <init-param> 
			<param-name>rmi-host</param-name> <param-value>localhost</param-value> <description> 
			The RMI host for registering the repository in the RMI Registry. If equals 
			"" or missing, the default host is used. </description> </init-param> <init-param> 
			<param-name>rmi-uri</param-name> <param-value></param-value> <description> 
			The RMI uri for registering the repository in the RMI Registry. If missing, 
			the uri is composed using the other rmi parameters and will have the format: 
			//{rmi-host}:{rmi-port}/{repository-name} </description> </init-param> -->
		<!-- JNDI environment variables for creating the initial context (all init 
			parameters starting with java.naming.* will be added to the initial context 
			environment). -->
		<!-- <init-param> <param-name>java.naming.provider.url</param-name> <param-value>http://www.apache.org/jackrabbit</param-value> 
			</init-param> <init-param> <param-name>java.naming.factory.initial</param-name> 
			<param-value>org.apache.jackrabbit.core.jndi.provider.DummyInitialContextFactory</param-value> 
			</init-param> -->
		<load-on-startup>2</load-on-startup>
	</servlet>


	<!-- ====================================================================== -->
	<!-- R E P O S I T O R Y S E R V L E T -->
	<!-- ====================================================================== -->
	<servlet>
		<servlet-name>Repository</servlet-name>
		<description>
			This servlet provides other servlets and jsps a common
			way to access
			the repository. The repository can be accessed via JNDI,
			RMI or Webdav.
		</description>
		<servlet-class>org.apache.jackrabbit.j2ee.RepositoryAccessServlet</servlet-class>

		<init-param>
			<param-name>bootstrap-config</param-name>
			<param-value>jackrabbit/bootstrap.properties</param-value>
			<description>
				Property file that hold the same initialization
				properties than
				the init-params below. If a parameter is specified in
				both
				places the one in the bootstrap-config wins.
			</description>
		</init-param>
		<!-- <init-param> <param-name>repository.context.attribute.name</param-name> 
			<param-value>javax.jcr.Repository</param-value> <description> If this is 
			set, the RepositoryAccessServlet expects a Repository in the ServletContext 
			attribute having this name. This allows servlets of this module to be used 
			with repositories initialized by the jackrabbit-jcr-servlet module utilities. 
			</description> </init-param> -->
		<!-- <init-param> <param-name>repository-name</param-name> <param-value>jackrabbit.repository</param-value> 
			<description>Repository Name that is used to retrieve it via JNDI</description> 
			</init-param> -->
		<!-- JNDI environment variables for creating the initial context (all init 
			parameters starting with java.naming.* will be added to the initial context 
			environment). -->
		<!-- <init-param> <param-name>java.naming.provider.url</param-name> <param-value>http://www.apache.org/jackrabbit</param-value> 
			</init-param> <init-param> <param-name>java.naming.factory.initial</param-name> 
			<param-value>org.apache.jackrabbit.core.jndi.provider.DummyInitialContextFactory</param-value> 
			</init-param> -->
		<!-- RMI url, if RMI remoting is needed -->
		<!-- <init-param> <param-name>rmi-uri</param-name> <param-value>///jackrabbit.repository</param-value> 
			<description>The URI for the RMI connection.</description> </init-param> -->

		<load-on-startup>3</load-on-startup>
	</servlet>

	<!-- ====================================================================== -->
	<!-- W E B D A V S E R V L E T -->
	<!-- ====================================================================== -->
	<servlet>
		<servlet-name>Webdav</servlet-name>
		<description>
			The webdav servlet that connects HTTP request to the
			repository.
		</description>
		<servlet-class>org.apache.jackrabbit.j2ee.SimpleWebdavServlet</servlet-class>

		<init-param>
			<param-name>resource-path-prefix</param-name>
			<param-value>/repository</param-value>
			<description>
				defines the prefix for spooling resources out of the
				repository.
			</description>
		</init-param>
		<!-- <init-param> <param-name>missing-auth-mapping</param-name> <param-value>anonymous:anonymous</param-value> 
			<description> Defines how a missing authorization header should be handled. 
			1) If this init-param is missing, a 401 response is generated. This is suitable 
			for clients (eg. webdav clients) for which sending a proper authorization 
			header is not possible if the server never sent a 401. 2) If this init-param 
			is present with an empty value, null-credentials are returned, thus forcing 
			an null login on the repository. 3) If this init-param is present with the 
			value 'guestcredentials' java.jcr.GuestCredentials are used to login to the 
			repository. 4) If this init-param has a 'user:password' value, the respective 
			simple credentials are generated. </description> </init-param> -->
		<!-- Optional parameter to define the value of the 'WWW-Authenticate' header -->
		<!-- <init-param> <param-name>authenticate-header</param-name> <param-value>Basic 
			realm="Jackrabbit Webdav Server"</param-value> <description> Defines the 
			value of the 'WWW-Authenticate' header. </description> </init-param> -->
		<!-- Parameter used to configure behaviour of webdav resources such as: 
			- distinction between collections and non-collections - resource filtering -->
		<init-param>
			<param-name>resource-config</param-name>
			<param-value>/WEB-INF/config.xml</param-value>
			<description>
				Defines various dav-resource configuration parameters.
			</description>
		</init-param>
		<!-- Optional parameter to define the behaviour of the referrer-based CSRF 
			protection -->
		<!-- <init-param> <param-name>csrf-protection</param-name> <param-value>host1.domain.com,host2.domain.org</param-value> 
			<description> Defines the behaviour of the referrer based CSRF protection 
			1) If omitted or left empty the (default) behaviour is to allow only requests 
			with an empty referrer header or a referrer host equal to the server host 
			2) May also contain a comma separated list of additional allowed referrer 
			hosts 3) If set to 'disabled' no referrer checking will be performed at all 
			</description> </init-param> -->
		<load-on-startup>4</load-on-startup>
	</servlet>

	<!-- ====================================================================== -->
	<!-- J C R R E M O T I N G S E R V L E T -->
	<!-- ====================================================================== -->
	<servlet>
		<servlet-name>JCRWebdavServer</servlet-name>
		<description>
			The servlet used to remote JCR calls over HTTP.
		</description>
		<servlet-class>org.apache.jackrabbit.j2ee.JcrRemotingServlet</servlet-class>
		<init-param>
			<param-name>missing-auth-mapping</param-name>
			<param-value></param-value>
			<description>
				Defines how a missing authorization header should be
				handled.
				1) If this init-param is missing, a 401 response is
				generated.
				This is suitable for clients (eg. webdav clients) for
				which
				sending a proper authorization header is not possible if the
				server never sent a 401.
				2) If this init-param is present with an
				empty value,
				null-credentials are returned, thus forcing an null
				login
				on the repository.
				3) If this init-param is present with the
				value 'guestcredentials'
				java.jcr.GuestCredentials are used to login
				to the repository.
				4) If this init-param has a 'user:password' value,
				the respective
				simple credentials are generated.
			</description>
		</init-param>
		<!-- Optional parameter to define the value of the 'WWW-Authenticate' header -->
		<!-- <init-param> <param-name>authenticate-header</param-name> <param-value>Basic 
			realm="Jackrabbit Webdav Server"</param-value> <description> Defines the 
			value of the 'WWW-Authenticate' header. </description> </init-param> -->
		<init-param>
			<param-name>resource-path-prefix</param-name>
			<param-value>/server</param-value>
			<description>
				defines the prefix for spooling resources out of the
				repository.
			</description>
		</init-param>
		<!-- Init parameters specific for JcrRemotingServlet -->
		<!-- <init-param> <param-name>home</param-name> <param-value></param-value> 
			<description>JcrRemotingServlet: Optional home directory for JcrRemotingServlet 
			temporary files (default: "jackrabbit")</description> </init-param> <init-param> 
			<param-name>temp-directory</param-name> <param-value></param-value> <description>JcrRemotingServlet: 
			Optional temporary directory name (under home, default: "tmp")</description> 
			</init-param> -->
		<init-param>
			<param-name>batchread-config</param-name>
			<param-value>/WEB-INF/batchread.properties</param-value>
			<description>JcrRemotingServlet: Optional mapping from node type
				names to default depth.</description>
		</init-param>
		<!-- init-param> <param-name>concurrency-level</param-name> <param-value>50</param-value> 
			<description>Number of concurrent requests expected. Default value is 50.</description> 
			</init-param -->
		<!-- Optional parameter to define the behaviour of the referrer-based CSRF 
			protection -->
		<!-- <init-param> <param-name>csrf-protection</param-name> <param-value>host1.domain.com,host2.domain.org</param-value> 
			<description> Defines the behaviour of the referrer based CSRF protection 
			1) If omitted or left empty the (default) behaviour is to allow only requests 
			with an empty referrer header or a referrer host equal to the server host 
			2) May also contain a comma separated list of additional allowed referrer 
			hosts 3) If set to 'disabled' no referrer checking will be performed at all 
			</description> </init-param> -->
		<load-on-startup>5</load-on-startup>
	</servlet>

	<!-- ====================================================================== -->
	<!-- R M I B I N D I N G S E R V L E T -->
	<!-- ====================================================================== -->
	<servlet>
		<servlet-name>RMI</servlet-name>
		<servlet-class>org.apache.jackrabbit.servlet.remote.RemoteBindingServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>PortalUserManager</servlet-name>
		<display-name>PortalUserManager</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.PortalUserManager</servlet-class>
	</servlet>


	<!-- ====================================================================== -->
	<!-- Test SERVLET -->
	<!-- ====================================================================== -->
	<servlet>
		<servlet-name>HomeManager</servlet-name>
		<display-name>HomeManager</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.homemanager.HomeManager</servlet-class>
	</servlet>


	<!-- ====================================================================== -->
	<!-- MY SERVLET -->
	<!-- ====================================================================== -->


	<servlet>
		<servlet-name>GetServlets</servlet-name>
		<display-name>GetServlets</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.get.GetServlets</servlet-class>
	</servlet>
		<servlet>
		<servlet-name>PostServlets</servlet-name>
		<display-name>PostServlets</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.get.PostServlets</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>ActiveSessions</servlet-name>
		<display-name>ActiveSessions</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.lock.ActiveSessions</servlet-class>
	</servlet>


	<servlet>
		<servlet-name>ReleaseSession</servlet-name>
		<display-name>ReleaseSession</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.lock.ReleaseSession</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>CreateSession</servlet-name>
		<display-name>CreateSession</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.lock.CreateSession</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>GetChildrenById</servlet-name>
		<display-name>GetChildrenById</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.get.GetChildrenById</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>GetItemById</servlet-name>
		<display-name>GetItemById</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.get.GetItemById</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>GetItemByPath</servlet-name>
		<display-name>GetItemByPath</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.get.GetItemByPath</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>GetParentById</servlet-name>
		<display-name>GetParentById</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.get.GetParentById</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>SaveItem</servlet-name>
		<display-name>SaveItem</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.post.SaveItem</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>Copy</servlet-name>
		<display-name>Copy</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.post.Copy</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>Clone</servlet-name>
		<display-name>Clone</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.post.Clone</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>RemoveItem</servlet-name>
		<display-name>RemoveItem</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.post.RemoveItem</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>Move</servlet-name>
		<display-name>Move</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.post.Move</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>ExecuteQuery</servlet-name>
		<display-name>ExecuteQuery</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.get.ExecuteQuery</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>SearchItems</servlet-name>
		<display-name>SearchItems</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.get.SearchItems</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>CreateReference</servlet-name>
		<display-name>CreateReference</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.post.CreateReference</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>TestSession</servlet-name>
		<display-name>TestSession</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.lock.TestSession</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>LockSession</servlet-name>
		<display-name>LockSession</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.lock.LockSession</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>UnlockSession</servlet-name>
		<display-name>UnlockSession</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.lock.UnlockSession</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>IsLocked</servlet-name>
		<display-name>IsLocked</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.lock.IsLocked</servlet-class>
	</servlet>

	<!-- ====================================================================== -->
	<!-- ACCOUNTING SERVLET -->
	<!-- ====================================================================== -->
	<servlet>
		<servlet-name>GetAccountingById</servlet-name>
		<display-name>GetAccountingById</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.accounting.get.GetAccountingById</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>SaveAccountingItem</servlet-name>
		<display-name>SaveAccountingItem</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.workspacemanager.accounting.post.SaveAccountingItem</servlet-class>
	</servlet>
	<!-- ====================================================================== -->
	<!-- USER MANAGER SERVLET -->
	<!-- ====================================================================== -->
	<servlet>
		<servlet-name>CreateUserServlet</servlet-name>
		<display-name>CreateUserServlet</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.usermanager.CreateUserServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>ListUsersServlet</servlet-name>
		<display-name>ListUsersServlet</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.usermanager.ListUsersServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>ListGroupsServlet</servlet-name>
		<display-name>ListGroupsServlet</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.usermanager.ListGroupsServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>CreateGroupServlet</servlet-name>
		<display-name>CreateGroupServlet</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.usermanager.CreateGroupServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>DeleteAuthorizableServlet</servlet-name>
		<display-name>DeleteAuthorizableServlet</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.usermanager.DeleteAuthorizableServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>GroupMembershipServlet</servlet-name>
		<display-name>GroupMembershipServlet</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.usermanager.GroupMembershipServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>UpdateGroupServlet</servlet-name>
		<display-name>UpdateGroupServlet</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.usermanager.UpdateGroupServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>IsGroupServlet</servlet-name>
		<display-name>IsGroupServlet</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.usermanager.IsGroupServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>GetDisplayNameServlet</servlet-name>
		<display-name>GetDisplayNameServlet</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.usermanager.GetDisplayNameServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>SetDisplayNameServlet</servlet-name>
		<display-name>SetDisplayNameServlet</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.usermanager.SetDisplayNameServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>SetVersionServlet</servlet-name>
		<display-name>SetVersionServlet</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.usermanager.SetVersionServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>GetVersionServlet</servlet-name>
		<display-name>GetVersionServlet</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.usermanager.GetVersionServlet</servlet-class>
	</servlet>

	<!-- ====================================================================== -->
	<!-- ACCESS MANAGER SERVLET -->
	<!-- ====================================================================== -->
	<servlet>
		<servlet-name>ModifyAceServlet</servlet-name>
		<display-name>ModifyAceServlet</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.accessmanager.ModifyAceServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>DeleteAcesServlet</servlet-name>
		<display-name>DeleteAcesServlet</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.accessmanager.DeleteAcesServlet</servlet-class>
	</servlet>

	<!-- ====================================================================== -->
	<!-- PRIVILEGE MANAGER SERVLET -->
	<!-- ====================================================================== -->
	<servlet>
		<servlet-name>CreateCostumePrivilegeServlet</servlet-name>
		<display-name>CreateCostumePrivilegeServlet</display-name>
		<description></description>
		<servlet-class>org.apache.jackrabbit.j2ee.privilegemanager.CreateCostumePrivilegeServlet</servlet-class>
	</servlet>



	<!-- ====================================================================== -->
	<!-- S E R V L E T M A P P I N G -->
	<!-- ====================================================================== -->
	<servlet-mapping>
		<servlet-name>RepositoryStartup</servlet-name>
		<url-pattern>/admin/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>Webdav</servlet-name>
		<url-pattern>/repository/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>JCRWebdavServer</servlet-name>
		<url-pattern>/server/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>RMI</servlet-name>
		<url-pattern>/rmi</url-pattern>
	</servlet-mapping>

	<!-- ====================================================================== -->
	<!-- MY SERVLET -->
	<!-- ====================================================================== -->

	<servlet-mapping>
		<servlet-name>GetServlets</servlet-name>
		<url-pattern>/get/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>PostServlets</servlet-name>
		<url-pattern>/post/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>ActiveSessions</servlet-name>
		<url-pattern>/ActiveSessions</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>ReleaseSession</servlet-name>
		<url-pattern>/ReleaseSession</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>CreateSession</servlet-name>
		<url-pattern>/CreateSession</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>GetChildrenById</servlet-name>
		<url-pattern>/GetChildrenById</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>GetItemById</servlet-name>
		<url-pattern>/GetItemById</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>GetItemByPath</servlet-name>
		<url-pattern>/GetItemByPath</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>GetParentById</servlet-name>
		<url-pattern>/GetParentById</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>SaveItem</servlet-name>
		<url-pattern>/SaveItem</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>Move</servlet-name>
		<url-pattern>/Move</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>Copy</servlet-name>
		<url-pattern>/Copy</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>Clone</servlet-name>
		<url-pattern>/Clone</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>RemoveItem</servlet-name>
		<url-pattern>/RemoveItem</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>ExecuteQuery</servlet-name>
		<url-pattern>/ExecuteQuery</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>SearchItems</servlet-name>
		<url-pattern>/SearchItems</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>CreateReference</servlet-name>
		<url-pattern>/CreateReference</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>GetAccountingById</servlet-name>
		<url-pattern>/GetAccountingById</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>SaveAccountingItem</servlet-name>
		<url-pattern>/SaveAccountingItem</url-pattern>
	</servlet-mapping>


	<servlet-mapping>
		<servlet-name>TestSession</servlet-name>
		<url-pattern>/TestSession</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>LockSession</servlet-name>
		<url-pattern>/LockSession</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>UnlockSession</servlet-name>
		<url-pattern>/UnlockSession</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>IsLocked</servlet-name>
		<url-pattern>/IsLocked</url-pattern>
	</servlet-mapping>

	<!-- ====================================================================== -->
	<!-- MY SERVLET MAPPING -->
	<!-- ====================================================================== -->

	<servlet-mapping>
		<servlet-name>PortalUserManager</servlet-name>
		<url-pattern>/PortalUserManager</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>CreateUserServlet</servlet-name>
		<url-pattern>/CreateUserServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>ListUsersServlet</servlet-name>
		<url-pattern>/ListUsersServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>IsGroupServlet</servlet-name>
		<url-pattern>/IsGroupServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>GetDisplayNameServlet</servlet-name>
		<url-pattern>/GetDisplayNameServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>SetDisplayNameServlet</servlet-name>
		<url-pattern>/SetDisplayNameServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>CreateGroupServlet</servlet-name>
		<url-pattern>/CreateGroupServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>ListGroupsServlet</servlet-name>
		<url-pattern>/ListGroupsServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>UpdateGroupServlet</servlet-name>
		<url-pattern>/UpdateGroupServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>GroupMembershipServlet</servlet-name>
		<url-pattern>/GroupMembershipServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>DeleteAuthorizableServlet</servlet-name>
		<url-pattern>/DeleteAuthorizableServlet</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>ModifyAceServlet</servlet-name>
		<url-pattern>/ModifyAceServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>DeleteAcesServlet</servlet-name>
		<url-pattern>/DeleteAcesServlet</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>CreateCostumePrivilegeServlet</servlet-name>
		<url-pattern>/CreateCostumePrivilegeServlet</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>SetVersionServlet</servlet-name>
		<url-pattern>/SetVersionServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>GetVersionServlet</servlet-name>
		<url-pattern>/GetVersionServlet</url-pattern>
	</servlet-mapping>

	<!-- ====================================================================== -->
	<!-- TEST -->
	<!-- ====================================================================== -->
	<servlet-mapping>
		<servlet-name>HomeManager</servlet-name>
		<url-pattern>/HomeManager</url-pattern>
	</servlet-mapping>



	<!-- ====================================================================== -->
	<!-- W E L C O M E F I L E S -->
	<!-- ====================================================================== -->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<error-page>
		<exception-type>org.apache.jackrabbit.j2ee.JcrApiNotFoundException</exception-type>
		<location>/error/classpath.jsp</location>
	</error-page>
	<error-page>
		<exception-type>javax.jcr.RepositoryException</exception-type>
		<location>/error/repository.jsp</location>
	</error-page>

</web-app>
