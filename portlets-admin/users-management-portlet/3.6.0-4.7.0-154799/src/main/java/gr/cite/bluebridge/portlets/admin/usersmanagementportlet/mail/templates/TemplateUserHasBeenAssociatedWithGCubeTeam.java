package gr.cite.bluebridge.portlets.admin.usersmanagementportlet.mail.templates;

import java.util.Base64;
import java.util.Date;

import org.gcube.common.portal.GCubePortalConstants;
import org.gcube.common.portal.PortalContext;
import org.gcube.common.portal.mailing.templates.AbstractTemplate;
import org.gcube.common.portal.mailing.templates.Template;
import org.gcube.portal.mailing.message.Constants;
import org.gcube.vomanagement.usermanagement.model.GCubeGroup;
import org.gcube.vomanagement.usermanagement.model.GCubeMembershipRequest;
import org.gcube.vomanagement.usermanagement.model.GCubeTeam;
import org.gcube.vomanagement.usermanagement.model.GCubeUser;

public class TemplateUserHasBeenAssociatedWithGCubeTeam extends AbstractTemplate implements Template {
	private final String encodedTemplateHTML = "";
	private final String encodedTemplateTEXT = "e3tHQVRFV0FZX05BTUV9fQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCkhpIHt7UkVRVUVTVElOR19VU0VSX0ZJUlNUX05BTUV9fSwKCnt7VVNFUl9GVUxMTkFNRX19IGhhcyBqdXN0IG1hZGUgeW91IGEgbWVtYmVyIG9mIHRoZSB7e1NFTEVDVEVEX1RFQU1fTkFNRX19IGdyb3VwIGluIHRoZSB7e1NFTEVDVEVEX1ZSRV9OQU1FfX0gVlJFLgoKWW91IGNhbiBhY2Nlc3MgdGhlIFZSRSBhdCB7e1ZSRV9VUkx9fSB1c2luZyB5b3VyIGVtYWlsIHt7UkVRVUVTVElOR19VU0VSX0VNQUlMfX0KCg";

	private GCubeGroup theRequestedVRE;
	private GCubeTeam teamToBeAssociatedWith;
	private GCubeUser theRequestingUser;
	private GCubeUser theManagerUser;
	private Date originalRequestDate;
	private String vreURL;

	/**
	 * 
	 * @param theRequestingUser an instance of @see {@link GCubeUser} representing the user who requested access
	 * @param teamToBeAssociatedWith an instance of @see {@link GCubeTeam} representing the team the user will join
	 * @param theManagerUser an instance of @see {@link GCubeUser} representing the manager who approved the request
	 * @param theRequestedVRE instance of @see {@link GCubeGroup} of the current VRE
	 * @param originalRequestDate the request date as in the associated {@link GCubeMembershipRequest}
	 * @param gatewayName gateway name can be obtained with {@link PortalContext#getGatewayName(javax.servlet.http.HttpServletRequest)}
	 * @param gatewayURL gateway URL name can be obtained with {@link PortalContext#getGatewayURL(javax.servlet.http.HttpServletRequest)}
	 */
	
	public TemplateUserHasBeenAssociatedWithGCubeTeam(
			GCubeGroup theRequestedVRE, GCubeTeam teamToBeAssociatedWith, GCubeUser theRequestingUser,
			GCubeUser theManagerUser, Date originalRequestDate,
			String gatewayName, String gatewayURL) {
		
		super(gatewayName, gatewayURL);
		
		this.theRequestingUser = theRequestingUser;
		this.theManagerUser = theManagerUser;
		this.theRequestedVRE = theRequestedVRE;		
		this.originalRequestDate = originalRequestDate;
		this.teamToBeAssociatedWith = teamToBeAssociatedWith;
		this.vreURL = new StringBuffer(gatewayURL)
				.append(GCubePortalConstants.PREFIX_GROUP_URL)
				.append("/").append(theRequestedVRE.getGroupName().toLowerCase()).toString();
	}

	@Override
	public String compile(String templateContent) {
		String userProfileLink = new StringBuffer(vreURL)
				.append("/").append(getUserProfileLink(theManagerUser.getUsername())).toString();

		return new String(Base64.getDecoder().decode(templateContent))
				.replace("{{REQUESTING_USER_FIRST_NAME}}", theRequestingUser.getFirstName())
				.replace("{{GATEWAY_LOGO:URL}}", getGatewayLogoURL())			
				.replace("{{GATEWAY_NAME}}", getGatewayName())
				.replace("{{USER_FULLNAME}}", theManagerUser.getFullname())
				.replace("{{SELECTED_VRE_NAME}}", theRequestedVRE.getGroupName())
				.replace("{{VRE_URL}}", vreURL)
				.replace("{{REQUESTING_USER_EMAIL}}", theRequestingUser.getEmail())
				.replace("{{MANAGE_REQUEST_DATE}}", originalRequestDate.toString())
				.replace("{{USER_VREMEMBER_PROFILE_URL}}", userProfileLink)
				.replace("{{SELECTED_TEAM_NAME}}", teamToBeAssociatedWith.getTeamName())
				;				
	}

	@Override
	public String getTextHTML() {
		return compile(encodedTemplateHTML);
	}

	@Override
	public String getTextPLAIN() {
		return compile(encodedTemplateTEXT);
	}
	
	private String getUserProfileLink(String username) {
		return "profile?"+ new String(
				Base64.getEncoder().encodeToString(Constants.USER_PROFILE_OID.getBytes())+
				"="+
						new String( Base64.getEncoder().encodeToString(username.getBytes()) )
						);
	}
}