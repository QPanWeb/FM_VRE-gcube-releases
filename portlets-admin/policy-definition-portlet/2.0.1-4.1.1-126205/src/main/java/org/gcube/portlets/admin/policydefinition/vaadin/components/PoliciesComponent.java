package org.gcube.portlets.admin.policydefinition.vaadin.components;

import org.gcube.portlets.admin.policydefinition.vaadin.listeners.CloseButtonListener;
import org.gcube.portlets.admin.policydefinition.vaadin.listeners.CreatePoliciesButtonListener;
import org.gcube.portlets.admin.policydefinition.vaadin.listeners.ModifyPolicyButtonListener;
import org.gcube.portlets.admin.policydefinition.vaadin.listeners.RemovePolicyButtonListener;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Container;
import com.vaadin.data.Property;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.Table;

public class PoliciesComponent extends CustomComponent {

	@AutoGenerated
	private AbsoluteLayout mainLayout;

	@AutoGenerated
	private Label titlePolicies;

	@AutoGenerated
	private PolicyTable policies;

	@AutoGenerated
	private Button close;

	@AutoGenerated
	private Button remove;

	@AutoGenerated
	private Button modify;

	@AutoGenerated
	private Button create;

	private static final long serialVersionUID = 3382888466608001526L;
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public PoliciesComponent(Container policiesContainer, Table services) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		policies.setContainerDataSource(policiesContainer);
		policies.setSelectable(true);
		policies.setMultiSelect(true);
		policies.setColumnReorderingAllowed(true);
		policies.setColumnCollapsingAllowed(false);	 
		
		close.focus();
		close.addListener(new CloseButtonListener());
		create.addListener(new CreatePoliciesButtonListener(services));
		remove.addListener(new RemovePolicyButtonListener(policies));
		Object value = services.getValue();
		Property servProp = services.getContainerDataSource().getItem(value).getItemProperty("id");
		modify.addListener(new ModifyPolicyButtonListener(policies, (String)servProp.getValue()));
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// create
		create = new Button();
		create.setCaption("Create policy");
		create.setImmediate(true);
		create.setWidth("104px");
		create.setHeight("26px");
		mainLayout.addComponent(create, "right:359.0px;bottom:20.0px;");
		
		// modify
		modify = new Button();
		modify.setCaption("Modify policy");
		modify.setImmediate(true);
		modify.setWidth("102px");
		modify.setHeight("-1px");
		mainLayout.addComponent(modify, "right:101.0px;bottom:20.0px;");
		
		// remove
		remove = new Button();
		remove.setCaption("Remove policy");
		remove.setImmediate(true);
		remove.setWidth("122px");
		remove.setHeight("26px");
		mainLayout.addComponent(remove, "right:221.0px;bottom:20.0px;");
		
		// close
		close = new Button();
		close.setCaption("Close");
		close.setImmediate(true);
		close.setWidth("61px");
		close.setHeight("-1px");
		mainLayout.addComponent(close, "right:22.0px;bottom:20.0px;");
		
		// policies
		policies = new PolicyTable();
		policies.setImmediate(false);
		policies.setWidth("100.0%");
		policies.setHeight("100.0%");
		mainLayout.addComponent(policies,
				"top:40.0px;right:21.0px;bottom:60.0px;left:20.0px;");
		
		// titlePolicies
		titlePolicies = new Label();
		titlePolicies.setImmediate(false);
		titlePolicies.setWidth("-1px");
		titlePolicies.setHeight("-1px");
		titlePolicies.setValue("Policies");
		mainLayout.addComponent(titlePolicies, "top:20.0px;left:20.0px;");
		
		return mainLayout;
	}

}
