package org.gcube.portlets.admin.policydefinition.vaadin.components;

import org.gcube.portlets.admin.policydefinition.vaadin.containers.ServicesQueryFactory;
import org.gcube.portlets.admin.policydefinition.vaadin.listeners.ShowPoliciesButtonListener;
import org.vaadin.addons.lazyquerycontainer.LazyQueryContainer;

import com.liferay.util.portlet.PortletProps;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Table;

public class ServicesComponent extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Button show;
	@AutoGenerated
	private Table servicesTable;
	private static final long serialVersionUID = -1630965126910177097L;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public ServicesComponent() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
        servicesTable.setSelectable(true);
        servicesTable.setMultiSelect(false);
        servicesTable.setImmediate(false);
        servicesTable.setColumnReorderingAllowed(true);
        servicesTable.setColumnCollapsingAllowed(false);
        
        ServicesQueryFactory queryfactory = new ServicesQueryFactory();
        LazyQueryContainer container=new LazyQueryContainer(queryfactory,false,Integer.parseInt(PortletProps.get("services.pagination.size")));
		container.addContainerProperty("serviceClass", String.class, "none", true, true);
		container.addContainerProperty("serviceName", String.class, "none", true, true);
		servicesTable.setColumnHeader("serviceClass", "Service Class");
		servicesTable.setColumnHeader("serviceName", "Service Name");
		servicesTable.setContainerDataSource(container);
        
        show.addListener(new ShowPoliciesButtonListener(servicesTable));
        show.focus();
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("440px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("440px");
		
		// servicesTable
		servicesTable = new Table();
		servicesTable.setCaption("Available services");
		servicesTable.setImmediate(false);
		servicesTable.setWidth("100.0%");
		servicesTable.setHeight("100.0%");
		mainLayout.addComponent(servicesTable,
				"top:20.0px;right:23.0px;bottom:60.0px;left:20.0px;");
		
		// show
		show = new Button();
		show.setCaption("Show policies");
		show.setImmediate(true);
		show.setWidth("-1px");
		show.setHeight("-1px");
		mainLayout.addComponent(show, "bottom:20.0px;left:20.0px;");
		
		return mainLayout;
	}

}
