package org.gcube.portlets.admin.policydefinition.vaadin.components;

import org.gcube.portlets.admin.policydefinition.common.util.PresentationHelper;
import org.gcube.portlets.admin.policydefinition.vaadin.listeners.CloseButtonListener;
import org.gcube.portlets.admin.policydefinition.vaadin.listeners.UpdatePolicyButtonListener;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextField;

public class UpdatePolicyConfirmComponent extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Button no;
	@AutoGenerated
	private Button yes;
	@AutoGenerated
	private Label message;
	
	private static final long serialVersionUID = 2204633067702963159L;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public UpdatePolicyConfirmComponent(String service, Table policyTable, TextField startTimeTextField,
			TextField endTimeTextField, PopupDateField startPopupDateField,
			PopupDateField endPopupDateField, CheckBox permitCheckBox, 
			CheckBox overridePermit, CheckBox overrideDate, CheckBox overrideTime,
			Button cancel) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		message.setValue("Are you sure you want to modify the selected "+PresentationHelper.getPolicyNoun(policyTable)+"?");
		no.addListener(new CloseButtonListener());
		yes.focus();
		yes.addListener(new UpdatePolicyButtonListener(
				service, policyTable, startTimeTextField, endTimeTextField, 
				startPopupDateField, endPopupDateField, permitCheckBox, 
				overridePermit, overrideDate, overrideTime, cancel));
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("320px");
		mainLayout.setHeight("100px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("320px");
		setHeight("100px");
		
		// message
		message = new Label();
		message.setImmediate(false);
		message.setWidth("-1px");
		message.setHeight("-1px");
		mainLayout.addComponent(message, "top:20.0px;left:20.0px;");
		
		// yes
		yes = new Button();
		yes.setCaption("Yes");
		yes.setImmediate(true);
		yes.setWidth("-1px");
		yes.setHeight("-1px");
		mainLayout.addComponent(yes, "top:40.0px;left:74.0px;");
		
		// no
		no = new Button();
		no.setCaption("No");
		no.setImmediate(true);
		no.setWidth("-1px");
		no.setHeight("-1px");
		mainLayout.addComponent(no, "top:40.0px;left:160.0px;");
		
		return mainLayout;
	}

}
