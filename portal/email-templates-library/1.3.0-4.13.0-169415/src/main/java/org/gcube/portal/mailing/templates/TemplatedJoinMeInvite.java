package org.gcube.portal.mailing.templates;

import java.util.Base64;

import org.gcube.common.portal.mailing.templates.AbstractTemplate;
import org.gcube.common.portal.mailing.templates.Template;
import org.gcube.vomanagement.usermanagement.model.GCubeUser;

/**
 * 
 * @author Massimiliano Assante, CNR-ISTI
 *
 */
public class TemplatedJoinMeInvite extends AbstractTemplate implements Template {
	private final String encodedTemplateHTML = "";
	private final String encodedTemplateTEXT = "e3tHQVRFV0FZX05BTUV9fQ0KLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KSGkge3tJTlZJVEVEX1VTRVJfTkFNRX19LA0Ke3tJTlZJVElOR19VU0VSX0ZVTExOQU1FfX0gaGFzIGludml0ZWQgeW91IHRvIHt7U0VMRUNURURfVlJFX05BTUV9fSwgeW91IGNhbiBmaW5kIGEgYnJpZWYgZGVzY3JpcHRpb24gYmVsb3c6DQoNCnt7U0VMRUNURURfVlJFX0RFU0NSSVBUSU9OfX0NCg0KVG8gYWNjZXB0IHRoZSBpbnZpdGUganVzdCBmb2xsb3cgdGhpcyBsaW5rOiB7e0FDQ0VQVF9JTlZJVEVfVVJMfX0=";
	
	private GCubeUser theInvitingUser;
	private String theUserInvitedName;
	private String theVREName;
	private String theVREDescription;
	private String acceptInviteURL;
	
	/**
	 * 
	 * @param gatewayName
	 * @param gatewayURL
	 * @param theInvitingUser
	 * @param theUserInvitedName
	 * @param theVRE
	 * @param acceptInviteURL
	 * @param signUpURL
	 */
	public TemplatedJoinMeInvite(String gatewayName, String gatewayURL, GCubeUser theInvitingUser,
			String theUserInvitedName, String theVREName, String theVREDescription, String acceptInviteURL) {
		super(gatewayName, gatewayURL);
		this.theInvitingUser = theInvitingUser;
		this.theUserInvitedName = theUserInvitedName;
		this.theVREName = theVREName;
		this.theVREDescription = theVREDescription;
		this.acceptInviteURL = acceptInviteURL;
	}

	@Override
	public String compile(String templateContent) {

		String userAvatarURL = getGatewayURL()+this.theInvitingUser.getUserAvatarURL();
		
		return new String(Base64.getDecoder().decode(templateContent))
				.replace("{{SELECTED_VRE_NAME}}", theVREName)
				.replace("{{INVITING_USER_AVATAR_URL}}", userAvatarURL)
				.replace("{{INVITING_USER_FULLNAME}}", theInvitingUser.getFullname())				
				.replace("{{INVITED_USER_NAME}}", this.theUserInvitedName)
				.replace("{{SELECTED_VRE_DESCRIPTION}}", theVREDescription)
				.replace("{{GATEWAY_LOGO:URL}}", getGatewayLogoURL())			
				.replace("{{GATEWAY_URL}}", getGatewayURL())	
				.replace("{{GATEWAY_NAME}}", getGatewayName())
				.replace("{{ACCEPT_INVITE_URL}}", acceptInviteURL);
	}
	
	@Override
	public String getTextHTML() {
		return compile(encodedTemplateHTML);
	}
	
	@Override
	public String getTextPLAIN() {
		return compile(encodedTemplateTEXT);
	}
}
